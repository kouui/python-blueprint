[project]
name = "project-name"
version = "0.1.0"
description = "description of this project"
authors = [
    { name = "Yuwei Huang", email = "huang.yuwei@plus-zero.co.jp" }
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.13,<3.14"
dependencies = [
    "auto-type-annotate==1.1.1",
    "mypy==1.15.0",
    "nox==2025.2.9",
    "pip-licenses>=5.0.0",
    "pre-commit==3.7.0",
    "ruff==0.11.7",
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    # Include this classifier to prevent accidentally publishing private code to PyPI.
    #   https://pypi.org/classifiers/
    "Private :: Do Not Upload",
]

[project.urls]
Repository = ""

[project.scripts]

[dependency-groups]
nox = [
    "nox",
]
# test = [
#     "pytest",
#     "pytest-cov",
#     "pytest-randomly",
# ]
type_check = [
    "mypy",
    # Add "types-" stub packages as needed: https://github.com/python/typeshed/tree/main/stubs
]
lint = [
    "ruff",
]
# docs = [
#     "mkdocs-material",
#     "mkdocs-htmlproofer-plugin",

#     # Python API documentation (not neccessary for applications).
#     "mkdocstrings[python]",
#     # Autodoc.
#     "mkdocs-gen-files",
#     "mkdocs-literate-nav",
# ]

[build-system]
# TODO: Replace this with uv_build when it is it released for GA.
#   https://github.com/astral-sh/uv/issues/3957
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
# default-groups = "all"
# Non-package applications can uncomment the following line and delete [build-system] section to
# avoid being built or installed: https://docs.astral.sh/uv/reference/settings/#package
package = false

[tool.mypy]
ignore_missing_imports = true
strict = true
check_untyped_defs = true
local_partial_types = true
# TODO: Remove this when explicit-override is enabled by default in strict mode
#   https://github.com/python/mypy/issues/17511
enable_error_code = ["explicit-override"]
# If certain strict config options are too pedantic for a project,
# disable them selectively here by setting to false.

[tool.ruff]
line-length = 120
src = ["src"]
# Ruff will automatically exclude all files listed in .gitignore as well as common temporary Python
# tool directories.
# To exclude additional folders, use extend-exclude.

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PT", # flake-pytest-style
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
extend-ignore = [
    "RUF005",
    "RUF012",
]
unfixable = [
    # Disable removing unused imports by default and only enable within nox so editors don't delete
    # unused imports while the user is in the middle of editing a file on save.
    "F401",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
split-on-trailing-comma = false
# For non-src directory projects, explicitly set top level package names:
# known-first-party = ["my-app"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["typer.Argument"]
